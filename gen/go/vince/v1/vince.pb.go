// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        (unknown)
// source: vince/v1/vince.proto

package v1

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/durationpb"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Interval int32

const (
	Interval_date   Interval = 0
	Interval_minute Interval = 1
	Interval_hour   Interval = 2
	Interval_week   Interval = 3
	Interval_month  Interval = 4
)

// Enum value maps for Interval.
var (
	Interval_name = map[int32]string{
		0: "date",
		1: "minute",
		2: "hour",
		3: "week",
		4: "month",
	}
	Interval_value = map[string]int32{
		"date":   0,
		"minute": 1,
		"hour":   2,
		"week":   3,
		"month":  4,
	}
)

func (x Interval) Enum() *Interval {
	p := new(Interval)
	*p = x
	return p
}

func (x Interval) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Interval) Descriptor() protoreflect.EnumDescriptor {
	return file_vince_v1_vince_proto_enumTypes[0].Descriptor()
}

func (Interval) Type() protoreflect.EnumType {
	return &file_vince_v1_vince_proto_enumTypes[0]
}

func (x Interval) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Interval.Descriptor instead.
func (Interval) EnumDescriptor() ([]byte, []int) {
	return file_vince_v1_vince_proto_rawDescGZIP(), []int{0}
}

type Metric int32

const (
	Metric_unknown_metric  Metric = 0
	Metric_visitors        Metric = 1
	Metric_visits          Metric = 2
	Metric_pageviews       Metric = 3
	Metric_views_per_visit Metric = 4
	Metric_bounce_rate     Metric = 5
	Metric_visit_duration  Metric = 6
	Metric_events          Metric = 7
)

// Enum value maps for Metric.
var (
	Metric_name = map[int32]string{
		0: "unknown_metric",
		1: "visitors",
		2: "visits",
		3: "pageviews",
		4: "views_per_visit",
		5: "bounce_rate",
		6: "visit_duration",
		7: "events",
	}
	Metric_value = map[string]int32{
		"unknown_metric":  0,
		"visitors":        1,
		"visits":          2,
		"pageviews":       3,
		"views_per_visit": 4,
		"bounce_rate":     5,
		"visit_duration":  6,
		"events":          7,
	}
)

func (x Metric) Enum() *Metric {
	p := new(Metric)
	*p = x
	return p
}

func (x Metric) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Metric) Descriptor() protoreflect.EnumDescriptor {
	return file_vince_v1_vince_proto_enumTypes[1].Descriptor()
}

func (Metric) Type() protoreflect.EnumType {
	return &file_vince_v1_vince_proto_enumTypes[1]
}

func (x Metric) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Metric.Descriptor instead.
func (Metric) EnumDescriptor() ([]byte, []int) {
	return file_vince_v1_vince_proto_rawDescGZIP(), []int{1}
}

type Property int32

const (
	Property_event           Property = 0
	Property_browser         Property = 7
	Property_browser_version Property = 8
	Property_city            Property = 9
	Property_country         Property = 10
	Property_device          Property = 11
	Property_domain          Property = 12
	Property_entry_page      Property = 13
	Property_exit_page       Property = 15
	Property_host            Property = 16
	Property_os              Property = 17
	Property_os_version      Property = 18
	Property_page            Property = 19
	Property_referrer        Property = 20
	Property_region          Property = 21
	Property_source          Property = 22
	Property_utm_campaign    Property = 24
	Property_utm_content     Property = 25
	Property_utm_medium      Property = 26
	Property_utm_source      Property = 27
	Property_utm_term        Property = 28
)

// Enum value maps for Property.
var (
	Property_name = map[int32]string{
		0:  "event",
		7:  "browser",
		8:  "browser_version",
		9:  "city",
		10: "country",
		11: "device",
		12: "domain",
		13: "entry_page",
		15: "exit_page",
		16: "host",
		17: "os",
		18: "os_version",
		19: "page",
		20: "referrer",
		21: "region",
		22: "source",
		24: "utm_campaign",
		25: "utm_content",
		26: "utm_medium",
		27: "utm_source",
		28: "utm_term",
	}
	Property_value = map[string]int32{
		"event":           0,
		"browser":         7,
		"browser_version": 8,
		"city":            9,
		"country":         10,
		"device":          11,
		"domain":          12,
		"entry_page":      13,
		"exit_page":       15,
		"host":            16,
		"os":              17,
		"os_version":      18,
		"page":            19,
		"referrer":        20,
		"region":          21,
		"source":          22,
		"utm_campaign":    24,
		"utm_content":     25,
		"utm_medium":      26,
		"utm_source":      27,
		"utm_term":        28,
	}
)

func (x Property) Enum() *Property {
	p := new(Property)
	*p = x
	return p
}

func (x Property) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Property) Descriptor() protoreflect.EnumDescriptor {
	return file_vince_v1_vince_proto_enumTypes[2].Descriptor()
}

func (Property) Type() protoreflect.EnumType {
	return &file_vince_v1_vince_proto_enumTypes[2]
}

func (x Property) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Property.Descriptor instead.
func (Property) EnumDescriptor() ([]byte, []int) {
	return file_vince_v1_vince_proto_rawDescGZIP(), []int{2}
}

type TimePeriod_Base int32

const (
	TimePeriod_day   TimePeriod_Base = 0
	TimePeriod__7d   TimePeriod_Base = 1
	TimePeriod__30d  TimePeriod_Base = 3
	TimePeriod_mo    TimePeriod_Base = 4
	TimePeriod__6mo  TimePeriod_Base = 5
	TimePeriod__12mo TimePeriod_Base = 6
	TimePeriod_year  TimePeriod_Base = 7
)

// Enum value maps for TimePeriod_Base.
var (
	TimePeriod_Base_name = map[int32]string{
		0: "day",
		1: "_7d",
		3: "_30d",
		4: "mo",
		5: "_6mo",
		6: "_12mo",
		7: "year",
	}
	TimePeriod_Base_value = map[string]int32{
		"day":   0,
		"_7d":   1,
		"_30d":  3,
		"mo":    4,
		"_6mo":  5,
		"_12mo": 6,
		"year":  7,
	}
)

func (x TimePeriod_Base) Enum() *TimePeriod_Base {
	p := new(TimePeriod_Base)
	*p = x
	return p
}

func (x TimePeriod_Base) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TimePeriod_Base) Descriptor() protoreflect.EnumDescriptor {
	return file_vince_v1_vince_proto_enumTypes[3].Descriptor()
}

func (TimePeriod_Base) Type() protoreflect.EnumType {
	return &file_vince_v1_vince_proto_enumTypes[3]
}

func (x TimePeriod_Base) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TimePeriod_Base.Descriptor instead.
func (TimePeriod_Base) EnumDescriptor() ([]byte, []int) {
	return file_vince_v1_vince_proto_rawDescGZIP(), []int{12, 0}
}

type Filters_Projection int32

const (
	Filters_unknown         Filters_Projection = 0
	Filters_timestamp       Filters_Projection = 1
	Filters_id              Filters_Projection = 2
	Filters_bounce          Filters_Projection = 3
	Filters_session         Filters_Projection = 4
	Filters_view            Filters_Projection = 5
	Filters_duration        Filters_Projection = 6
	Filters_browser         Filters_Projection = 7
	Filters_browser_version Filters_Projection = 8
	Filters_city            Filters_Projection = 9
	Filters_country         Filters_Projection = 10
	Filters_device          Filters_Projection = 11
	Filters_domain          Filters_Projection = 12
	Filters_entry_page      Filters_Projection = 13
	Filters_event           Filters_Projection = 14
	Filters_exit_page       Filters_Projection = 15
	Filters_host            Filters_Projection = 16
	Filters_os              Filters_Projection = 17
	Filters_os_version      Filters_Projection = 18
	Filters_page            Filters_Projection = 19
	Filters_referrer        Filters_Projection = 20
	Filters_region          Filters_Projection = 21
	Filters_source          Filters_Projection = 22
	Filters_utm_campaign    Filters_Projection = 24
	Filters_utm_content     Filters_Projection = 25
	Filters_utm_medium      Filters_Projection = 26
	Filters_utm_source      Filters_Projection = 27
	Filters_utm_term        Filters_Projection = 28
)

// Enum value maps for Filters_Projection.
var (
	Filters_Projection_name = map[int32]string{
		0:  "unknown",
		1:  "timestamp",
		2:  "id",
		3:  "bounce",
		4:  "session",
		5:  "view",
		6:  "duration",
		7:  "browser",
		8:  "browser_version",
		9:  "city",
		10: "country",
		11: "device",
		12: "domain",
		13: "entry_page",
		14: "event",
		15: "exit_page",
		16: "host",
		17: "os",
		18: "os_version",
		19: "page",
		20: "referrer",
		21: "region",
		22: "source",
		24: "utm_campaign",
		25: "utm_content",
		26: "utm_medium",
		27: "utm_source",
		28: "utm_term",
	}
	Filters_Projection_value = map[string]int32{
		"unknown":         0,
		"timestamp":       1,
		"id":              2,
		"bounce":          3,
		"session":         4,
		"view":            5,
		"duration":        6,
		"browser":         7,
		"browser_version": 8,
		"city":            9,
		"country":         10,
		"device":          11,
		"domain":          12,
		"entry_page":      13,
		"event":           14,
		"exit_page":       15,
		"host":            16,
		"os":              17,
		"os_version":      18,
		"page":            19,
		"referrer":        20,
		"region":          21,
		"source":          22,
		"utm_campaign":    24,
		"utm_content":     25,
		"utm_medium":      26,
		"utm_source":      27,
		"utm_term":        28,
	}
)

func (x Filters_Projection) Enum() *Filters_Projection {
	p := new(Filters_Projection)
	*p = x
	return p
}

func (x Filters_Projection) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Filters_Projection) Descriptor() protoreflect.EnumDescriptor {
	return file_vince_v1_vince_proto_enumTypes[4].Descriptor()
}

func (Filters_Projection) Type() protoreflect.EnumType {
	return &file_vince_v1_vince_proto_enumTypes[4]
}

func (x Filters_Projection) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Filters_Projection.Descriptor instead.
func (Filters_Projection) EnumDescriptor() ([]byte, []int) {
	return file_vince_v1_vince_proto_rawDescGZIP(), []int{13, 0}
}

type Filter_OP int32

const (
	Filter_equal        Filter_OP = 0
	Filter_not_equal    Filter_OP = 1
	Filter_re_equal     Filter_OP = 2
	Filter_re_not_equal Filter_OP = 3
)

// Enum value maps for Filter_OP.
var (
	Filter_OP_name = map[int32]string{
		0: "equal",
		1: "not_equal",
		2: "re_equal",
		3: "re_not_equal",
	}
	Filter_OP_value = map[string]int32{
		"equal":        0,
		"not_equal":    1,
		"re_equal":     2,
		"re_not_equal": 3,
	}
)

func (x Filter_OP) Enum() *Filter_OP {
	p := new(Filter_OP)
	*p = x
	return p
}

func (x Filter_OP) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Filter_OP) Descriptor() protoreflect.EnumDescriptor {
	return file_vince_v1_vince_proto_enumTypes[5].Descriptor()
}

func (Filter_OP) Type() protoreflect.EnumType {
	return &file_vince_v1_vince_proto_enumTypes[5]
}

func (x Filter_OP) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Filter_OP.Descriptor instead.
func (Filter_OP) EnumDescriptor() ([]byte, []int) {
	return file_vince_v1_vince_proto_rawDescGZIP(), []int{14, 0}
}

type NodeMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url         string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	CommitIndex uint64 `protobuf:"varint,2,opt,name=commit_index,json=commitIndex,proto3" json:"commit_index,omitempty"`
}

func (x *NodeMeta) Reset() {
	*x = NodeMeta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vince_v1_vince_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeMeta) ProtoMessage() {}

func (x *NodeMeta) ProtoReflect() protoreflect.Message {
	mi := &file_vince_v1_vince_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeMeta.ProtoReflect.Descriptor instead.
func (*NodeMeta) Descriptor() ([]byte, []int) {
	return file_vince_v1_vince_proto_rawDescGZIP(), []int{0}
}

func (x *NodeMeta) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *NodeMeta) GetCommitIndex() uint64 {
	if x != nil {
		return x.CommitIndex
	}
	return 0
}

type Credentials struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *Credentials) Reset() {
	*x = Credentials{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vince_v1_vince_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Credentials) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Credentials) ProtoMessage() {}

func (x *Credentials) ProtoReflect() protoreflect.Message {
	mi := &file_vince_v1_vince_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Credentials.ProtoReflect.Descriptor instead.
func (*Credentials) Descriptor() ([]byte, []int) {
	return file_vince_v1_vince_proto_rawDescGZIP(), []int{1}
}

func (x *Credentials) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *Credentials) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type Notify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Notify) Reset() {
	*x = Notify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vince_v1_vince_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Notify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Notify) ProtoMessage() {}

func (x *Notify) ProtoReflect() protoreflect.Message {
	mi := &file_vince_v1_vince_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Notify.ProtoReflect.Descriptor instead.
func (*Notify) Descriptor() ([]byte, []int) {
	return file_vince_v1_vince_proto_rawDescGZIP(), []int{2}
}

type NodeAPIRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *NodeAPIRequest) Reset() {
	*x = NodeAPIRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vince_v1_vince_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeAPIRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeAPIRequest) ProtoMessage() {}

func (x *NodeAPIRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vince_v1_vince_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeAPIRequest.ProtoReflect.Descriptor instead.
func (*NodeAPIRequest) Descriptor() ([]byte, []int) {
	return file_vince_v1_vince_proto_rawDescGZIP(), []int{3}
}

type RemoveNode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RemoveNode) Reset() {
	*x = RemoveNode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vince_v1_vince_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveNode) ProtoMessage() {}

func (x *RemoveNode) ProtoReflect() protoreflect.Message {
	mi := &file_vince_v1_vince_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveNode.ProtoReflect.Descriptor instead.
func (*RemoveNode) Descriptor() ([]byte, []int) {
	return file_vince_v1_vince_proto_rawDescGZIP(), []int{4}
}

type Load struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Load) Reset() {
	*x = Load{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vince_v1_vince_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Load) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Load) ProtoMessage() {}

func (x *Load) ProtoReflect() protoreflect.Message {
	mi := &file_vince_v1_vince_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Load.ProtoReflect.Descriptor instead.
func (*Load) Descriptor() ([]byte, []int) {
	return file_vince_v1_vince_proto_rawDescGZIP(), []int{5}
}

type Backup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Backup) Reset() {
	*x = Backup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vince_v1_vince_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Backup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Backup) ProtoMessage() {}

func (x *Backup) ProtoReflect() protoreflect.Message {
	mi := &file_vince_v1_vince_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Backup.ProtoReflect.Descriptor instead.
func (*Backup) Descriptor() ([]byte, []int) {
	return file_vince_v1_vince_proto_rawDescGZIP(), []int{6}
}

type Join struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Join) Reset() {
	*x = Join{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vince_v1_vince_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Join) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Join) ProtoMessage() {}

func (x *Join) ProtoReflect() protoreflect.Message {
	mi := &file_vince_v1_vince_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Join.ProtoReflect.Descriptor instead.
func (*Join) Descriptor() ([]byte, []int) {
	return file_vince_v1_vince_proto_rawDescGZIP(), []int{7}
}

type Realtime struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Realtime) Reset() {
	*x = Realtime{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vince_v1_vince_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Realtime) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Realtime) ProtoMessage() {}

func (x *Realtime) ProtoReflect() protoreflect.Message {
	mi := &file_vince_v1_vince_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Realtime.ProtoReflect.Descriptor instead.
func (*Realtime) Descriptor() ([]byte, []int) {
	return file_vince_v1_vince_proto_rawDescGZIP(), []int{8}
}

type Aggregate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Aggregate) Reset() {
	*x = Aggregate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vince_v1_vince_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Aggregate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Aggregate) ProtoMessage() {}

func (x *Aggregate) ProtoReflect() protoreflect.Message {
	mi := &file_vince_v1_vince_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Aggregate.ProtoReflect.Descriptor instead.
func (*Aggregate) Descriptor() ([]byte, []int) {
	return file_vince_v1_vince_proto_rawDescGZIP(), []int{9}
}

type Timeseries struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Timeseries) Reset() {
	*x = Timeseries{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vince_v1_vince_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Timeseries) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Timeseries) ProtoMessage() {}

func (x *Timeseries) ProtoReflect() protoreflect.Message {
	mi := &file_vince_v1_vince_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Timeseries.ProtoReflect.Descriptor instead.
func (*Timeseries) Descriptor() ([]byte, []int) {
	return file_vince_v1_vince_proto_rawDescGZIP(), []int{10}
}

type BreakDown struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *BreakDown) Reset() {
	*x = BreakDown{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vince_v1_vince_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BreakDown) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BreakDown) ProtoMessage() {}

func (x *BreakDown) ProtoReflect() protoreflect.Message {
	mi := &file_vince_v1_vince_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BreakDown.ProtoReflect.Descriptor instead.
func (*BreakDown) Descriptor() ([]byte, []int) {
	return file_vince_v1_vince_proto_rawDescGZIP(), []int{11}
}

type TimePeriod struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Value:
	//
	//	*TimePeriod_Base_
	//	*TimePeriod_Custom_
	Value isTimePeriod_Value `protobuf_oneof:"value"`
}

func (x *TimePeriod) Reset() {
	*x = TimePeriod{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vince_v1_vince_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TimePeriod) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimePeriod) ProtoMessage() {}

func (x *TimePeriod) ProtoReflect() protoreflect.Message {
	mi := &file_vince_v1_vince_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimePeriod.ProtoReflect.Descriptor instead.
func (*TimePeriod) Descriptor() ([]byte, []int) {
	return file_vince_v1_vince_proto_rawDescGZIP(), []int{12}
}

func (m *TimePeriod) GetValue() isTimePeriod_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (x *TimePeriod) GetBase() TimePeriod_Base {
	if x, ok := x.GetValue().(*TimePeriod_Base_); ok {
		return x.Base
	}
	return TimePeriod_day
}

func (x *TimePeriod) GetCustom() *TimePeriod_Custom {
	if x, ok := x.GetValue().(*TimePeriod_Custom_); ok {
		return x.Custom
	}
	return nil
}

type isTimePeriod_Value interface {
	isTimePeriod_Value()
}

type TimePeriod_Base_ struct {
	Base TimePeriod_Base `protobuf:"varint,1,opt,name=base,proto3,enum=v1.TimePeriod_Base,oneof"`
}

type TimePeriod_Custom_ struct {
	Custom *TimePeriod_Custom `protobuf:"bytes,2,opt,name=custom,proto3,oneof"`
}

func (*TimePeriod_Base_) isTimePeriod_Value() {}

func (*TimePeriod_Custom_) isTimePeriod_Value() {}

type Filters struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*Filter `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	// columns returned
	Projection []Filters_Projection `protobuf:"varint,2,rep,packed,name=projection,proto3,enum=v1.Filters_Projection" json:"projection,omitempty"`
}

func (x *Filters) Reset() {
	*x = Filters{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vince_v1_vince_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Filters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Filters) ProtoMessage() {}

func (x *Filters) ProtoReflect() protoreflect.Message {
	mi := &file_vince_v1_vince_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Filters.ProtoReflect.Descriptor instead.
func (*Filters) Descriptor() ([]byte, []int) {
	return file_vince_v1_vince_proto_rawDescGZIP(), []int{13}
}

func (x *Filters) GetList() []*Filter {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *Filters) GetProjection() []Filters_Projection {
	if x != nil {
		return x.Projection
	}
	return nil
}

type Filter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Property Property  `protobuf:"varint,1,opt,name=property,proto3,enum=v1.Property" json:"property,omitempty"`
	Op       Filter_OP `protobuf:"varint,2,opt,name=op,proto3,enum=v1.Filter_OP" json:"op,omitempty"`
	Value    string    `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *Filter) Reset() {
	*x = Filter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vince_v1_vince_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Filter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Filter) ProtoMessage() {}

func (x *Filter) ProtoReflect() protoreflect.Message {
	mi := &file_vince_v1_vince_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Filter.ProtoReflect.Descriptor instead.
func (*Filter) Descriptor() ([]byte, []int) {
	return file_vince_v1_vince_proto_rawDescGZIP(), []int{14}
}

func (x *Filter) GetProperty() Property {
	if x != nil {
		return x.Property
	}
	return Property_event
}

func (x *Filter) GetOp() Filter_OP {
	if x != nil {
		return x.Op
	}
	return Filter_equal
}

func (x *Filter) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type Event struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// / EventName
	N string `protobuf:"bytes,1,opt,name=n,proto3" json:"n,omitempty"`
	U string `protobuf:"bytes,2,opt,name=u,proto3" json:"u,omitempty"`
	// Domain
	D string `protobuf:"bytes,3,opt,name=d,proto3" json:"d,omitempty"`
	// Screen width
	W int32 `protobuf:"varint,4,opt,name=w,proto3" json:"w,omitempty"`
	// Hash mode
	H  bool   `protobuf:"varint,5,opt,name=h,proto3" json:"h,omitempty"`
	Ip string `protobuf:"bytes,6,opt,name=ip,proto3" json:"ip,omitempty"`
	// user agent
	Ua string `protobuf:"bytes,7,opt,name=ua,proto3" json:"ua,omitempty"`
	// Referrer
	R         string                 `protobuf:"bytes,8,opt,name=r,proto3" json:"r,omitempty"`
	Timestamp *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *Event) Reset() {
	*x = Event{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vince_v1_vince_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event) ProtoMessage() {}

func (x *Event) ProtoReflect() protoreflect.Message {
	mi := &file_vince_v1_vince_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event.ProtoReflect.Descriptor instead.
func (*Event) Descriptor() ([]byte, []int) {
	return file_vince_v1_vince_proto_rawDescGZIP(), []int{15}
}

func (x *Event) GetN() string {
	if x != nil {
		return x.N
	}
	return ""
}

func (x *Event) GetU() string {
	if x != nil {
		return x.U
	}
	return ""
}

func (x *Event) GetD() string {
	if x != nil {
		return x.D
	}
	return ""
}

func (x *Event) GetW() int32 {
	if x != nil {
		return x.W
	}
	return 0
}

func (x *Event) GetH() bool {
	if x != nil {
		return x.H
	}
	return false
}

func (x *Event) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *Event) GetUa() string {
	if x != nil {
		return x.Ua
	}
	return ""
}

func (x *Event) GetR() string {
	if x != nil {
		return x.R
	}
	return ""
}

func (x *Event) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

type Error struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error string `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *Error) Reset() {
	*x = Error{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vince_v1_vince_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Error) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Error) ProtoMessage() {}

func (x *Error) ProtoReflect() protoreflect.Message {
	mi := &file_vince_v1_vince_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Error.ProtoReflect.Descriptor instead.
func (*Error) Descriptor() ([]byte, []int) {
	return file_vince_v1_vince_proto_rawDescGZIP(), []int{16}
}

func (x *Error) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type Notify_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Address string `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *Notify_Request) Reset() {
	*x = Notify_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vince_v1_vince_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Notify_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Notify_Request) ProtoMessage() {}

func (x *Notify_Request) ProtoReflect() protoreflect.Message {
	mi := &file_vince_v1_vince_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Notify_Request.ProtoReflect.Descriptor instead.
func (*Notify_Request) Descriptor() ([]byte, []int) {
	return file_vince_v1_vince_proto_rawDescGZIP(), []int{2, 0}
}

func (x *Notify_Request) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Notify_Request) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type RemoveNode_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *RemoveNode_Request) Reset() {
	*x = RemoveNode_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vince_v1_vince_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveNode_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveNode_Request) ProtoMessage() {}

func (x *RemoveNode_Request) ProtoReflect() protoreflect.Message {
	mi := &file_vince_v1_vince_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveNode_Request.ProtoReflect.Descriptor instead.
func (*RemoveNode_Request) Descriptor() ([]byte, []int) {
	return file_vince_v1_vince_proto_rawDescGZIP(), []int{4, 0}
}

func (x *RemoveNode_Request) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type Load_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []byte `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *Load_Request) Reset() {
	*x = Load_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vince_v1_vince_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Load_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Load_Request) ProtoMessage() {}

func (x *Load_Request) ProtoReflect() protoreflect.Message {
	mi := &file_vince_v1_vince_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Load_Request.ProtoReflect.Descriptor instead.
func (*Load_Request) Descriptor() ([]byte, []int) {
	return file_vince_v1_vince_proto_rawDescGZIP(), []int{5, 0}
}

func (x *Load_Request) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type Backup_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Leader   bool `protobuf:"varint,1,opt,name=leader,proto3" json:"leader,omitempty"`
	Compress bool `protobuf:"varint,2,opt,name=compress,proto3" json:"compress,omitempty"`
}

func (x *Backup_Request) Reset() {
	*x = Backup_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vince_v1_vince_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Backup_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Backup_Request) ProtoMessage() {}

func (x *Backup_Request) ProtoReflect() protoreflect.Message {
	mi := &file_vince_v1_vince_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Backup_Request.ProtoReflect.Descriptor instead.
func (*Backup_Request) Descriptor() ([]byte, []int) {
	return file_vince_v1_vince_proto_rawDescGZIP(), []int{6, 0}
}

func (x *Backup_Request) GetLeader() bool {
	if x != nil {
		return x.Leader
	}
	return false
}

func (x *Backup_Request) GetCompress() bool {
	if x != nil {
		return x.Compress
	}
	return false
}

type Backup_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []byte `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *Backup_Response) Reset() {
	*x = Backup_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vince_v1_vince_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Backup_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Backup_Response) ProtoMessage() {}

func (x *Backup_Response) ProtoReflect() protoreflect.Message {
	mi := &file_vince_v1_vince_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Backup_Response.ProtoReflect.Descriptor instead.
func (*Backup_Response) Descriptor() ([]byte, []int) {
	return file_vince_v1_vince_proto_rawDescGZIP(), []int{6, 1}
}

func (x *Backup_Response) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type Join_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Address string `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	Voter   bool   `protobuf:"varint,3,opt,name=voter,proto3" json:"voter,omitempty"`
}

func (x *Join_Request) Reset() {
	*x = Join_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vince_v1_vince_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Join_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Join_Request) ProtoMessage() {}

func (x *Join_Request) ProtoReflect() protoreflect.Message {
	mi := &file_vince_v1_vince_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Join_Request.ProtoReflect.Descriptor instead.
func (*Join_Request) Descriptor() ([]byte, []int) {
	return file_vince_v1_vince_proto_rawDescGZIP(), []int{7, 0}
}

func (x *Join_Request) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Join_Request) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *Join_Request) GetVoter() bool {
	if x != nil {
		return x.Voter
	}
	return false
}

type Join_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Leader string `protobuf:"bytes,1,opt,name=leader,proto3" json:"leader,omitempty"`
}

func (x *Join_Response) Reset() {
	*x = Join_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vince_v1_vince_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Join_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Join_Response) ProtoMessage() {}

func (x *Join_Response) ProtoReflect() protoreflect.Message {
	mi := &file_vince_v1_vince_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Join_Response.ProtoReflect.Descriptor instead.
func (*Join_Response) Descriptor() ([]byte, []int) {
	return file_vince_v1_vince_proto_rawDescGZIP(), []int{7, 1}
}

func (x *Join_Response) GetLeader() string {
	if x != nil {
		return x.Leader
	}
	return ""
}

type Realtime_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SiteId string `protobuf:"bytes,1,opt,name=site_id,json=siteId,proto3" json:"site_id,omitempty"`
}

func (x *Realtime_Request) Reset() {
	*x = Realtime_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vince_v1_vince_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Realtime_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Realtime_Request) ProtoMessage() {}

func (x *Realtime_Request) ProtoReflect() protoreflect.Message {
	mi := &file_vince_v1_vince_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Realtime_Request.ProtoReflect.Descriptor instead.
func (*Realtime_Request) Descriptor() ([]byte, []int) {
	return file_vince_v1_vince_proto_rawDescGZIP(), []int{8, 0}
}

func (x *Realtime_Request) GetSiteId() string {
	if x != nil {
		return x.SiteId
	}
	return ""
}

type Realtime_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Visitors uint64 `protobuf:"varint,1,opt,name=visitors,proto3" json:"visitors,omitempty"`
}

func (x *Realtime_Response) Reset() {
	*x = Realtime_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vince_v1_vince_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Realtime_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Realtime_Response) ProtoMessage() {}

func (x *Realtime_Response) ProtoReflect() protoreflect.Message {
	mi := &file_vince_v1_vince_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Realtime_Response.ProtoReflect.Descriptor instead.
func (*Realtime_Response) Descriptor() ([]byte, []int) {
	return file_vince_v1_vince_proto_rawDescGZIP(), []int{8, 1}
}

func (x *Realtime_Response) GetVisitors() uint64 {
	if x != nil {
		return x.Visitors
	}
	return 0
}

type Aggregate_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SiteId  string                 `protobuf:"bytes,1,opt,name=site_id,json=siteId,proto3" json:"site_id,omitempty"`
	Period  *TimePeriod            `protobuf:"bytes,3,opt,name=period,proto3" json:"period,omitempty"`
	Metrics []Metric               `protobuf:"varint,4,rep,packed,name=metrics,proto3,enum=v1.Metric" json:"metrics,omitempty"`
	Filters []*Filter              `protobuf:"bytes,6,rep,name=filters,proto3" json:"filters,omitempty"`
	Date    *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=date,proto3" json:"date,omitempty"`
}

func (x *Aggregate_Request) Reset() {
	*x = Aggregate_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vince_v1_vince_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Aggregate_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Aggregate_Request) ProtoMessage() {}

func (x *Aggregate_Request) ProtoReflect() protoreflect.Message {
	mi := &file_vince_v1_vince_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Aggregate_Request.ProtoReflect.Descriptor instead.
func (*Aggregate_Request) Descriptor() ([]byte, []int) {
	return file_vince_v1_vince_proto_rawDescGZIP(), []int{9, 0}
}

func (x *Aggregate_Request) GetSiteId() string {
	if x != nil {
		return x.SiteId
	}
	return ""
}

func (x *Aggregate_Request) GetPeriod() *TimePeriod {
	if x != nil {
		return x.Period
	}
	return nil
}

func (x *Aggregate_Request) GetMetrics() []Metric {
	if x != nil {
		return x.Metrics
	}
	return nil
}

func (x *Aggregate_Request) GetFilters() []*Filter {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *Aggregate_Request) GetDate() *timestamppb.Timestamp {
	if x != nil {
		return x.Date
	}
	return nil
}

type Aggregate_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Mappping of metric to metric value. We can't use enums as map keys that
	// is why we use string here.
	Results map[string]float64 `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"fixed64,2,opt,name=value,proto3"`
}

func (x *Aggregate_Response) Reset() {
	*x = Aggregate_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vince_v1_vince_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Aggregate_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Aggregate_Response) ProtoMessage() {}

func (x *Aggregate_Response) ProtoReflect() protoreflect.Message {
	mi := &file_vince_v1_vince_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Aggregate_Response.ProtoReflect.Descriptor instead.
func (*Aggregate_Response) Descriptor() ([]byte, []int) {
	return file_vince_v1_vince_proto_rawDescGZIP(), []int{9, 1}
}

func (x *Aggregate_Response) GetResults() map[string]float64 {
	if x != nil {
		return x.Results
	}
	return nil
}

type Timeseries_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SiteId   string                 `protobuf:"bytes,1,opt,name=site_id,json=siteId,proto3" json:"site_id,omitempty"`
	TenantId string                 `protobuf:"bytes,2,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	Period   *TimePeriod            `protobuf:"bytes,3,opt,name=period,proto3" json:"period,omitempty"`
	Metrics  []Metric               `protobuf:"varint,4,rep,packed,name=metrics,proto3,enum=v1.Metric" json:"metrics,omitempty"`
	Interval Interval               `protobuf:"varint,5,opt,name=interval,proto3,enum=v1.Interval" json:"interval,omitempty"`
	Filters  []*Filter              `protobuf:"bytes,6,rep,name=filters,proto3" json:"filters,omitempty"`
	Date     *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=date,proto3" json:"date,omitempty"`
}

func (x *Timeseries_Request) Reset() {
	*x = Timeseries_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vince_v1_vince_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Timeseries_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Timeseries_Request) ProtoMessage() {}

func (x *Timeseries_Request) ProtoReflect() protoreflect.Message {
	mi := &file_vince_v1_vince_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Timeseries_Request.ProtoReflect.Descriptor instead.
func (*Timeseries_Request) Descriptor() ([]byte, []int) {
	return file_vince_v1_vince_proto_rawDescGZIP(), []int{10, 0}
}

func (x *Timeseries_Request) GetSiteId() string {
	if x != nil {
		return x.SiteId
	}
	return ""
}

func (x *Timeseries_Request) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *Timeseries_Request) GetPeriod() *TimePeriod {
	if x != nil {
		return x.Period
	}
	return nil
}

func (x *Timeseries_Request) GetMetrics() []Metric {
	if x != nil {
		return x.Metrics
	}
	return nil
}

func (x *Timeseries_Request) GetInterval() Interval {
	if x != nil {
		return x.Interval
	}
	return Interval_date
}

func (x *Timeseries_Request) GetFilters() []*Filter {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *Timeseries_Request) GetDate() *timestamppb.Timestamp {
	if x != nil {
		return x.Date
	}
	return nil
}

type Timeseries_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results []*Timeseries_Bucket `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
}

func (x *Timeseries_Response) Reset() {
	*x = Timeseries_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vince_v1_vince_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Timeseries_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Timeseries_Response) ProtoMessage() {}

func (x *Timeseries_Response) ProtoReflect() protoreflect.Message {
	mi := &file_vince_v1_vince_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Timeseries_Response.ProtoReflect.Descriptor instead.
func (*Timeseries_Response) Descriptor() ([]byte, []int) {
	return file_vince_v1_vince_proto_rawDescGZIP(), []int{10, 1}
}

func (x *Timeseries_Response) GetResults() []*Timeseries_Bucket {
	if x != nil {
		return x.Results
	}
	return nil
}

type Timeseries_Bucket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Values    map[string]float64     `protobuf:"bytes,2,rep,name=values,proto3" json:"values,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"fixed64,2,opt,name=value,proto3"`
}

func (x *Timeseries_Bucket) Reset() {
	*x = Timeseries_Bucket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vince_v1_vince_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Timeseries_Bucket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Timeseries_Bucket) ProtoMessage() {}

func (x *Timeseries_Bucket) ProtoReflect() protoreflect.Message {
	mi := &file_vince_v1_vince_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Timeseries_Bucket.ProtoReflect.Descriptor instead.
func (*Timeseries_Bucket) Descriptor() ([]byte, []int) {
	return file_vince_v1_vince_proto_rawDescGZIP(), []int{10, 2}
}

func (x *Timeseries_Bucket) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *Timeseries_Bucket) GetValues() map[string]float64 {
	if x != nil {
		return x.Values
	}
	return nil
}

type BreakDown_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SiteId   string                 `protobuf:"bytes,1,opt,name=site_id,json=siteId,proto3" json:"site_id,omitempty"`
	TenantId string                 `protobuf:"bytes,2,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	Property []Property             `protobuf:"varint,3,rep,packed,name=property,proto3,enum=v1.Property" json:"property,omitempty"`
	Period   *TimePeriod            `protobuf:"bytes,4,opt,name=period,proto3" json:"period,omitempty"`
	Metrics  []Metric               `protobuf:"varint,5,rep,packed,name=metrics,proto3,enum=v1.Metric" json:"metrics,omitempty"`
	Filters  []*Filter              `protobuf:"bytes,6,rep,name=filters,proto3" json:"filters,omitempty"`
	Date     *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=date,proto3" json:"date,omitempty"`
}

func (x *BreakDown_Request) Reset() {
	*x = BreakDown_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vince_v1_vince_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BreakDown_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BreakDown_Request) ProtoMessage() {}

func (x *BreakDown_Request) ProtoReflect() protoreflect.Message {
	mi := &file_vince_v1_vince_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BreakDown_Request.ProtoReflect.Descriptor instead.
func (*BreakDown_Request) Descriptor() ([]byte, []int) {
	return file_vince_v1_vince_proto_rawDescGZIP(), []int{11, 0}
}

func (x *BreakDown_Request) GetSiteId() string {
	if x != nil {
		return x.SiteId
	}
	return ""
}

func (x *BreakDown_Request) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *BreakDown_Request) GetProperty() []Property {
	if x != nil {
		return x.Property
	}
	return nil
}

func (x *BreakDown_Request) GetPeriod() *TimePeriod {
	if x != nil {
		return x.Period
	}
	return nil
}

func (x *BreakDown_Request) GetMetrics() []Metric {
	if x != nil {
		return x.Metrics
	}
	return nil
}

func (x *BreakDown_Request) GetFilters() []*Filter {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *BreakDown_Request) GetDate() *timestamppb.Timestamp {
	if x != nil {
		return x.Date
	}
	return nil
}

type BreakDown_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results []*BreakDown_Result `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
}

func (x *BreakDown_Response) Reset() {
	*x = BreakDown_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vince_v1_vince_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BreakDown_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BreakDown_Response) ProtoMessage() {}

func (x *BreakDown_Response) ProtoReflect() protoreflect.Message {
	mi := &file_vince_v1_vince_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BreakDown_Response.ProtoReflect.Descriptor instead.
func (*BreakDown_Response) Descriptor() ([]byte, []int) {
	return file_vince_v1_vince_proto_rawDescGZIP(), []int{11, 1}
}

func (x *BreakDown_Response) GetResults() []*BreakDown_Result {
	if x != nil {
		return x.Results
	}
	return nil
}

type BreakDown_Result struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Property Property               `protobuf:"varint,1,opt,name=property,proto3,enum=v1.Property" json:"property,omitempty"`
	Values   []*BreakDown_KeyValues `protobuf:"bytes,2,rep,name=values,proto3" json:"values,omitempty"`
}

func (x *BreakDown_Result) Reset() {
	*x = BreakDown_Result{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vince_v1_vince_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BreakDown_Result) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BreakDown_Result) ProtoMessage() {}

func (x *BreakDown_Result) ProtoReflect() protoreflect.Message {
	mi := &file_vince_v1_vince_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BreakDown_Result.ProtoReflect.Descriptor instead.
func (*BreakDown_Result) Descriptor() ([]byte, []int) {
	return file_vince_v1_vince_proto_rawDescGZIP(), []int{11, 2}
}

func (x *BreakDown_Result) GetProperty() Property {
	if x != nil {
		return x.Property
	}
	return Property_event
}

func (x *BreakDown_Result) GetValues() []*BreakDown_KeyValues {
	if x != nil {
		return x.Values
	}
	return nil
}

type BreakDown_KeyValues struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   string             `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value map[string]float64 `protobuf:"bytes,2,rep,name=value,proto3" json:"value,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"fixed64,2,opt,name=value,proto3"`
}

func (x *BreakDown_KeyValues) Reset() {
	*x = BreakDown_KeyValues{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vince_v1_vince_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BreakDown_KeyValues) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BreakDown_KeyValues) ProtoMessage() {}

func (x *BreakDown_KeyValues) ProtoReflect() protoreflect.Message {
	mi := &file_vince_v1_vince_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BreakDown_KeyValues.ProtoReflect.Descriptor instead.
func (*BreakDown_KeyValues) Descriptor() ([]byte, []int) {
	return file_vince_v1_vince_proto_rawDescGZIP(), []int{11, 3}
}

func (x *BreakDown_KeyValues) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *BreakDown_KeyValues) GetValue() map[string]float64 {
	if x != nil {
		return x.Value
	}
	return nil
}

type TimePeriod_Custom struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Start *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=start,proto3" json:"start,omitempty"`
	End   *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=end,proto3" json:"end,omitempty"`
}

func (x *TimePeriod_Custom) Reset() {
	*x = TimePeriod_Custom{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vince_v1_vince_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TimePeriod_Custom) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimePeriod_Custom) ProtoMessage() {}

func (x *TimePeriod_Custom) ProtoReflect() protoreflect.Message {
	mi := &file_vince_v1_vince_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimePeriod_Custom.ProtoReflect.Descriptor instead.
func (*TimePeriod_Custom) Descriptor() ([]byte, []int) {
	return file_vince_v1_vince_proto_rawDescGZIP(), []int{12, 0}
}

func (x *TimePeriod_Custom) GetStart() *timestamppb.Timestamp {
	if x != nil {
		return x.Start
	}
	return nil
}

func (x *TimePeriod_Custom) GetEnd() *timestamppb.Timestamp {
	if x != nil {
		return x.End
	}
	return nil
}

var File_vince_v1_vince_proto protoreflect.FileDescriptor

var file_vince_v1_vince_proto_rawDesc = []byte{
	0x0a, 0x14, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x76, 0x69, 0x6e, 0x63, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x76, 0x31, 0x1a, 0x1b, 0x62, 0x75, 0x66, 0x2f,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x2f, 0x76, 0x31, 0x2f,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x3f, 0x0a, 0x08,
	0x4e, 0x6f, 0x64, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f,
	0x6d, 0x6d, 0x69, 0x74, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x45, 0x0a,
	0x0b, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x12, 0x1a, 0x0a, 0x08,
	0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x22, 0x3d, 0x0a, 0x06, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x1a, 0x33,
	0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x22, 0x10, 0x0a, 0x0e, 0x4e, 0x6f, 0x64, 0x65, 0x41, 0x50, 0x49, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x27, 0x0a, 0x0a, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4e,
	0x6f, 0x64, 0x65, 0x1a, 0x19, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x25,
	0x0a, 0x04, 0x4c, 0x6f, 0x61, 0x64, 0x1a, 0x1d, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x67, 0x0a, 0x06, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x1a,
	0x3d, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x6c, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x63, 0x6f, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x1a, 0x1e,
	0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x75,
	0x0a, 0x04, 0x4a, 0x6f, 0x69, 0x6e, 0x1a, 0x49, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x6f, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x76, 0x6f, 0x74, 0x65,
	0x72, 0x1a, 0x22, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x6c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6c,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x22, 0x5e, 0x0a, 0x08, 0x52, 0x65, 0x61, 0x6c, 0x74, 0x69, 0x6d,
	0x65, 0x1a, 0x2a, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x07,
	0x73, 0x69, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xba,
	0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x06, 0x73, 0x69, 0x74, 0x65, 0x49, 0x64, 0x1a, 0x26, 0x0a,
	0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x76, 0x69, 0x73,
	0x69, 0x74, 0x6f, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x76, 0x69, 0x73,
	0x69, 0x74, 0x6f, 0x72, 0x73, 0x22, 0xfc, 0x02, 0x0a, 0x09, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67,
	0x61, 0x74, 0x65, 0x1a, 0xe6, 0x01, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1f, 0x0a, 0x07, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x06, 0x73, 0x69, 0x74, 0x65, 0x49, 0x64,
	0x12, 0x2e, 0x0a, 0x06, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0e, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64,
	0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x06, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64,
	0x12, 0x2c, 0x0a, 0x07, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x0e, 0x32, 0x0a, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x42, 0x06, 0xba,
	0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x07, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x12, 0x24,
	0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0a, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x07, 0x66, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x73, 0x12, 0x36, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x06,
	0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x1a, 0x85, 0x01, 0x0a,
	0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x07, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x76, 0x31, 0x2e,
	0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x1a, 0x3a, 0x0a, 0x0c, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x22, 0xbc, 0x04, 0x0a, 0x0a, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x65, 0x72,
	0x69, 0x65, 0x73, 0x1a, 0xb5, 0x02, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1f, 0x0a, 0x07, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x06, 0x73, 0x69, 0x74, 0x65, 0x49, 0x64,
	0x12, 0x23, 0x0a, 0x09, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x08, 0x74, 0x65, 0x6e,
	0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x06, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x50,
	0x65, 0x72, 0x69, 0x6f, 0x64, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x06, 0x70,
	0x65, 0x72, 0x69, 0x6f, 0x64, 0x12, 0x2c, 0x0a, 0x07, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x0a, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x74, 0x72,
	0x69, 0x63, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x07, 0x6d, 0x65, 0x74, 0x72,
	0x69, 0x63, 0x73, 0x12, 0x28, 0x0a, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x76, 0x61, 0x6c, 0x52, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x12, 0x24, 0x0a,
	0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a,
	0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x73, 0x12, 0x36, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x06, 0xba,
	0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x1a, 0x3b, 0x0a, 0x08, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x65, 0x72, 0x69, 0x65, 0x73, 0x2e, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x52,
	0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x1a, 0xb8, 0x01, 0x0a, 0x06, 0x42, 0x75, 0x63,
	0x6b, 0x65, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x39, 0x0a,
	0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e,
	0x76, 0x31, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x65, 0x72, 0x69, 0x65, 0x73, 0x2e, 0x42, 0x75,
	0x63, 0x6b, 0x65, 0x74, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x1a, 0x39, 0x0a, 0x0b, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x22, 0x80, 0x05, 0x0a, 0x09, 0x42, 0x72, 0x65, 0x61, 0x6b, 0x44, 0x6f, 0x77,
	0x6e, 0x1a, 0xbd, 0x02, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a,
	0x07, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06,
	0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x06, 0x73, 0x69, 0x74, 0x65, 0x49, 0x64, 0x12, 0x23,
	0x0a, 0x09, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e,
	0x74, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x65,
	0x72, 0x74, 0x79, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x08, 0x70, 0x72, 0x6f,
	0x70, 0x65, 0x72, 0x74, 0x79, 0x12, 0x2e, 0x0a, 0x06, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x50,
	0x65, 0x72, 0x69, 0x6f, 0x64, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x06, 0x70,
	0x65, 0x72, 0x69, 0x6f, 0x64, 0x12, 0x2c, 0x0a, 0x07, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73,
	0x18, 0x05, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x0a, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x74, 0x72,
	0x69, 0x63, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x07, 0x6d, 0x65, 0x74, 0x72,
	0x69, 0x63, 0x73, 0x12, 0x24, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x06,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x36, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x65, 0x1a, 0x3a, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a,
	0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x76, 0x31, 0x2e, 0x42, 0x72, 0x65, 0x61, 0x6b, 0x44, 0x6f, 0x77, 0x6e, 0x2e, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x1a, 0x63, 0x0a,
	0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x28, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x70, 0x65,
	0x72, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x76, 0x31, 0x2e, 0x50,
	0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74,
	0x79, 0x12, 0x2f, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x72, 0x65, 0x61, 0x6b, 0x44, 0x6f, 0x77, 0x6e,
	0x2e, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x73, 0x1a, 0x91, 0x01, 0x0a, 0x09, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x38, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x22, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x72, 0x65, 0x61, 0x6b, 0x44, 0x6f, 0x77, 0x6e,
	0x2e, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0x38, 0x0a, 0x0a,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xa6, 0x02, 0x0a, 0x0a, 0x54, 0x69, 0x6d, 0x65, 0x50,
	0x65, 0x72, 0x69, 0x6f, 0x64, 0x12, 0x29, 0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x50, 0x65, 0x72,
	0x69, 0x6f, 0x64, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x48, 0x00, 0x52, 0x04, 0x62, 0x61, 0x73, 0x65,
	0x12, 0x2f, 0x0a, 0x06, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64,
	0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x48, 0x00, 0x52, 0x06, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x1a, 0x68, 0x0a, 0x06, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x12, 0x30, 0x0a, 0x05, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x2c, 0x0a,
	0x03, 0x65, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x03, 0x65, 0x6e, 0x64, 0x22, 0x49, 0x0a, 0x04, 0x42,
	0x61, 0x73, 0x65, 0x12, 0x07, 0x0a, 0x03, 0x64, 0x61, 0x79, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03,
	0x5f, 0x37, 0x64, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x5f, 0x33, 0x30, 0x64, 0x10, 0x03, 0x12,
	0x06, 0x0a, 0x02, 0x6d, 0x6f, 0x10, 0x04, 0x12, 0x08, 0x0a, 0x04, 0x5f, 0x36, 0x6d, 0x6f, 0x10,
	0x05, 0x12, 0x09, 0x0a, 0x05, 0x5f, 0x31, 0x32, 0x6d, 0x6f, 0x10, 0x06, 0x12, 0x08, 0x0a, 0x04,
	0x79, 0x65, 0x61, 0x72, 0x10, 0x07, 0x42, 0x07, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22,
	0xe3, 0x03, 0x0a, 0x07, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x1e, 0x0a, 0x04, 0x6c,
	0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x76, 0x31, 0x2e, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x36, 0x0a, 0x0a, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0e, 0x32,
	0x16, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x2e, 0x50, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0xff, 0x02, 0x0a, 0x0a, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x0b, 0x0a, 0x07, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x10, 0x00, 0x12,
	0x0d, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x10, 0x01, 0x12, 0x06,
	0x0a, 0x02, 0x69, 0x64, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x62, 0x6f, 0x75, 0x6e, 0x63, 0x65,
	0x10, 0x03, 0x12, 0x0b, 0x0a, 0x07, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x10, 0x04, 0x12,
	0x08, 0x0a, 0x04, 0x76, 0x69, 0x65, 0x77, 0x10, 0x05, 0x12, 0x0c, 0x0a, 0x08, 0x64, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x10, 0x06, 0x12, 0x0b, 0x0a, 0x07, 0x62, 0x72, 0x6f, 0x77, 0x73,
	0x65, 0x72, 0x10, 0x07, 0x12, 0x13, 0x0a, 0x0f, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x5f,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x10, 0x08, 0x12, 0x08, 0x0a, 0x04, 0x63, 0x69, 0x74,
	0x79, 0x10, 0x09, 0x12, 0x0b, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x10, 0x0a,
	0x12, 0x0a, 0x0a, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x10, 0x0b, 0x12, 0x0a, 0x0a, 0x06,
	0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x10, 0x0c, 0x12, 0x0e, 0x0a, 0x0a, 0x65, 0x6e, 0x74, 0x72,
	0x79, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x10, 0x0d, 0x12, 0x09, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x10, 0x0e, 0x12, 0x0d, 0x0a, 0x09, 0x65, 0x78, 0x69, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65,
	0x10, 0x0f, 0x12, 0x08, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x10, 0x10, 0x12, 0x06, 0x0a, 0x02,
	0x6f, 0x73, 0x10, 0x11, 0x12, 0x0e, 0x0a, 0x0a, 0x6f, 0x73, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x10, 0x12, 0x12, 0x08, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x10, 0x13, 0x12, 0x0c,
	0x0a, 0x08, 0x72, 0x65, 0x66, 0x65, 0x72, 0x72, 0x65, 0x72, 0x10, 0x14, 0x12, 0x0a, 0x0a, 0x06,
	0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x10, 0x15, 0x12, 0x0a, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x10, 0x16, 0x12, 0x10, 0x0a, 0x0c, 0x75, 0x74, 0x6d, 0x5f, 0x63, 0x61, 0x6d, 0x70,
	0x61, 0x69, 0x67, 0x6e, 0x10, 0x18, 0x12, 0x0f, 0x0a, 0x0b, 0x75, 0x74, 0x6d, 0x5f, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x10, 0x19, 0x12, 0x0e, 0x0a, 0x0a, 0x75, 0x74, 0x6d, 0x5f, 0x6d,
	0x65, 0x64, 0x69, 0x75, 0x6d, 0x10, 0x1a, 0x12, 0x0e, 0x0a, 0x0a, 0x75, 0x74, 0x6d, 0x5f, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x10, 0x1b, 0x12, 0x0c, 0x0a, 0x08, 0x75, 0x74, 0x6d, 0x5f, 0x74,
	0x65, 0x72, 0x6d, 0x10, 0x1c, 0x22, 0xa7, 0x01, 0x0a, 0x06, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x12, 0x28, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79,
	0x52, 0x08, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x12, 0x1d, 0x0a, 0x02, 0x6f, 0x70,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x2e, 0x4f, 0x50, 0x52, 0x02, 0x6f, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22,
	0x3e, 0x0a, 0x02, 0x4f, 0x50, 0x12, 0x09, 0x0a, 0x05, 0x65, 0x71, 0x75, 0x61, 0x6c, 0x10, 0x00,
	0x12, 0x0d, 0x0a, 0x09, 0x6e, 0x6f, 0x74, 0x5f, 0x65, 0x71, 0x75, 0x61, 0x6c, 0x10, 0x01, 0x12,
	0x0c, 0x0a, 0x08, 0x72, 0x65, 0x5f, 0x65, 0x71, 0x75, 0x61, 0x6c, 0x10, 0x02, 0x12, 0x10, 0x0a,
	0x0c, 0x72, 0x65, 0x5f, 0x6e, 0x6f, 0x74, 0x5f, 0x65, 0x71, 0x75, 0x61, 0x6c, 0x10, 0x03, 0x22,
	0xd6, 0x01, 0x0a, 0x05, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x01, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x01, 0x6e, 0x12,
	0x19, 0x0a, 0x01, 0x75, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0b, 0xba, 0x48, 0x08, 0xc8,
	0x01, 0x01, 0x72, 0x03, 0x88, 0x01, 0x01, 0x52, 0x01, 0x75, 0x12, 0x18, 0x0a, 0x01, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xba, 0x48, 0x07, 0xc8, 0x01, 0x01, 0x72, 0x02, 0x68,
	0x01, 0x52, 0x01, 0x64, 0x12, 0x0c, 0x0a, 0x01, 0x77, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x01, 0x77, 0x12, 0x0c, 0x0a, 0x01, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x01, 0x68,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70,
	0x12, 0x0e, 0x0a, 0x02, 0x75, 0x61, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x75, 0x61,
	0x12, 0x0c, 0x0a, 0x01, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x01, 0x72, 0x12, 0x38,
	0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0x1d, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x2a, 0x3f, 0x0a, 0x08, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x76, 0x61, 0x6c, 0x12, 0x08, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x10, 0x00, 0x12, 0x0a, 0x0a,
	0x06, 0x6d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x68, 0x6f, 0x75,
	0x72, 0x10, 0x02, 0x12, 0x08, 0x0a, 0x04, 0x77, 0x65, 0x65, 0x6b, 0x10, 0x03, 0x12, 0x09, 0x0a,
	0x05, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x10, 0x04, 0x2a, 0x8b, 0x01, 0x0a, 0x06, 0x4d, 0x65, 0x74,
	0x72, 0x69, 0x63, 0x12, 0x12, 0x0a, 0x0e, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x5f, 0x6d,
	0x65, 0x74, 0x72, 0x69, 0x63, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x76, 0x69, 0x73, 0x69, 0x74,
	0x6f, 0x72, 0x73, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x76, 0x69, 0x73, 0x69, 0x74, 0x73, 0x10,
	0x02, 0x12, 0x0d, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x76, 0x69, 0x65, 0x77, 0x73, 0x10, 0x03,
	0x12, 0x13, 0x0a, 0x0f, 0x76, 0x69, 0x65, 0x77, 0x73, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x76, 0x69,
	0x73, 0x69, 0x74, 0x10, 0x04, 0x12, 0x0f, 0x0a, 0x0b, 0x62, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x5f,
	0x72, 0x61, 0x74, 0x65, 0x10, 0x05, 0x12, 0x12, 0x0a, 0x0e, 0x76, 0x69, 0x73, 0x69, 0x74, 0x5f,
	0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x10, 0x06, 0x12, 0x0a, 0x0a, 0x06, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x73, 0x10, 0x07, 0x2a, 0xa8, 0x02, 0x0a, 0x08, 0x50, 0x72, 0x6f, 0x70, 0x65,
	0x72, 0x74, 0x79, 0x12, 0x09, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x10, 0x00, 0x12, 0x0b,
	0x0a, 0x07, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x10, 0x07, 0x12, 0x13, 0x0a, 0x0f, 0x62,
	0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x10, 0x08,
	0x12, 0x08, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x10, 0x09, 0x12, 0x0b, 0x0a, 0x07, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x72, 0x79, 0x10, 0x0a, 0x12, 0x0a, 0x0a, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x10, 0x0b, 0x12, 0x0a, 0x0a, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x10, 0x0c, 0x12,
	0x0e, 0x0a, 0x0a, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x10, 0x0d, 0x12,
	0x0d, 0x0a, 0x09, 0x65, 0x78, 0x69, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x10, 0x0f, 0x12, 0x08,
	0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x10, 0x10, 0x12, 0x06, 0x0a, 0x02, 0x6f, 0x73, 0x10, 0x11,
	0x12, 0x0e, 0x0a, 0x0a, 0x6f, 0x73, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x10, 0x12,
	0x12, 0x08, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x10, 0x13, 0x12, 0x0c, 0x0a, 0x08, 0x72, 0x65,
	0x66, 0x65, 0x72, 0x72, 0x65, 0x72, 0x10, 0x14, 0x12, 0x0a, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69,
	0x6f, 0x6e, 0x10, 0x15, 0x12, 0x0a, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x10, 0x16,
	0x12, 0x10, 0x0a, 0x0c, 0x75, 0x74, 0x6d, 0x5f, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e,
	0x10, 0x18, 0x12, 0x0f, 0x0a, 0x0b, 0x75, 0x74, 0x6d, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x10, 0x19, 0x12, 0x0e, 0x0a, 0x0a, 0x75, 0x74, 0x6d, 0x5f, 0x6d, 0x65, 0x64, 0x69, 0x75,
	0x6d, 0x10, 0x1a, 0x12, 0x0e, 0x0a, 0x0a, 0x75, 0x74, 0x6d, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x10, 0x1b, 0x12, 0x0c, 0x0a, 0x08, 0x75, 0x74, 0x6d, 0x5f, 0x74, 0x65, 0x72, 0x6d, 0x10,
	0x1c, 0x32, 0xe4, 0x04, 0x0a, 0x0f, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x43, 0x4c,
	0x75, 0x73, 0x74, 0x65, 0x72, 0x12, 0x2b, 0x0a, 0x04, 0x4a, 0x6f, 0x69, 0x6e, 0x12, 0x10, 0x2e,
	0x76, 0x31, 0x2e, 0x4a, 0x6f, 0x69, 0x6e, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x11, 0x2e, 0x76, 0x31, 0x2e, 0x4a, 0x6f, 0x69, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x30, 0x0a, 0x04, 0x4c, 0x6f, 0x61, 0x64, 0x12, 0x10, 0x2e, 0x76, 0x31, 0x2e,
	0x4c, 0x6f, 0x61, 0x64, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x12, 0x33, 0x0a, 0x06, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x12, 0x12,
	0x2e, 0x76, 0x31, 0x2e, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x13, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x30, 0x01, 0x12, 0x3c, 0x0a, 0x0a, 0x52, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x34, 0x0a, 0x06, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x79, 0x12, 0x12, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x2b, 0x0a,
	0x07, 0x4e, 0x6f, 0x64, 0x65, 0x41, 0x50, 0x49, 0x12, 0x12, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f,
	0x64, 0x65, 0x41, 0x50, 0x49, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0c, 0x2e, 0x76,
	0x31, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x2c, 0x0a, 0x08, 0x53, 0x65,
	0x6e, 0x64, 0x44, 0x61, 0x74, 0x61, 0x12, 0x08, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x61, 0x74, 0x61,
	0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x37, 0x0a, 0x08, 0x52, 0x65, 0x61, 0x6c,
	0x74, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x61, 0x6c, 0x74, 0x69,
	0x6d, 0x65, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x76, 0x31, 0x2e,
	0x52, 0x65, 0x61, 0x6c, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x3a, 0x0a, 0x09, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x12, 0x15,
	0x2e, 0x76, 0x31, 0x2e, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x2e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x67, 0x67, 0x72, 0x65,
	0x67, 0x61, 0x74, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a,
	0x0a, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x65, 0x72, 0x69, 0x65, 0x73, 0x12, 0x16, 0x2e, 0x76, 0x31,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x65, 0x72, 0x69, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x65, 0x72,
	0x69, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x09,
	0x42, 0x72, 0x65, 0x61, 0x6b, 0x44, 0x6f, 0x77, 0x6e, 0x12, 0x15, 0x2e, 0x76, 0x31, 0x2e, 0x42,
	0x72, 0x65, 0x61, 0x6b, 0x44, 0x6f, 0x77, 0x6e, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x16, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x72, 0x65, 0x61, 0x6b, 0x44, 0x6f, 0x77, 0x6e, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x6b, 0x0a, 0x06, 0x63, 0x6f, 0x6d, 0x2e,
	0x76, 0x31, 0x42, 0x0a, 0x56, 0x69, 0x6e, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01,
	0x5a, 0x2d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x76, 0x69, 0x6e,
	0x63, 0x65, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x2f, 0x74, 0x73, 0x75, 0x2f,
	0x67, 0x65, 0x6e, 0x2f, 0x67, 0x6f, 0x2f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x2f, 0x76, 0x31, 0xa2,
	0x02, 0x03, 0x56, 0x58, 0x58, 0xaa, 0x02, 0x02, 0x56, 0x31, 0xca, 0x02, 0x02, 0x56, 0x31, 0xe2,
	0x02, 0x0e, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0xea, 0x02, 0x02, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_vince_v1_vince_proto_rawDescOnce sync.Once
	file_vince_v1_vince_proto_rawDescData = file_vince_v1_vince_proto_rawDesc
)

func file_vince_v1_vince_proto_rawDescGZIP() []byte {
	file_vince_v1_vince_proto_rawDescOnce.Do(func() {
		file_vince_v1_vince_proto_rawDescData = protoimpl.X.CompressGZIP(file_vince_v1_vince_proto_rawDescData)
	})
	return file_vince_v1_vince_proto_rawDescData
}

var file_vince_v1_vince_proto_enumTypes = make([]protoimpl.EnumInfo, 6)
var file_vince_v1_vince_proto_msgTypes = make([]protoimpl.MessageInfo, 39)
var file_vince_v1_vince_proto_goTypes = []interface{}{
	(Interval)(0),                 // 0: v1.Interval
	(Metric)(0),                   // 1: v1.Metric
	(Property)(0),                 // 2: v1.Property
	(TimePeriod_Base)(0),          // 3: v1.TimePeriod.Base
	(Filters_Projection)(0),       // 4: v1.Filters.Projection
	(Filter_OP)(0),                // 5: v1.Filter.OP
	(*NodeMeta)(nil),              // 6: v1.NodeMeta
	(*Credentials)(nil),           // 7: v1.Credentials
	(*Notify)(nil),                // 8: v1.Notify
	(*NodeAPIRequest)(nil),        // 9: v1.NodeAPIRequest
	(*RemoveNode)(nil),            // 10: v1.RemoveNode
	(*Load)(nil),                  // 11: v1.Load
	(*Backup)(nil),                // 12: v1.Backup
	(*Join)(nil),                  // 13: v1.Join
	(*Realtime)(nil),              // 14: v1.Realtime
	(*Aggregate)(nil),             // 15: v1.Aggregate
	(*Timeseries)(nil),            // 16: v1.Timeseries
	(*BreakDown)(nil),             // 17: v1.BreakDown
	(*TimePeriod)(nil),            // 18: v1.TimePeriod
	(*Filters)(nil),               // 19: v1.Filters
	(*Filter)(nil),                // 20: v1.Filter
	(*Event)(nil),                 // 21: v1.Event
	(*Error)(nil),                 // 22: v1.Error
	(*Notify_Request)(nil),        // 23: v1.Notify.Request
	(*RemoveNode_Request)(nil),    // 24: v1.RemoveNode.Request
	(*Load_Request)(nil),          // 25: v1.Load.Request
	(*Backup_Request)(nil),        // 26: v1.Backup.Request
	(*Backup_Response)(nil),       // 27: v1.Backup.Response
	(*Join_Request)(nil),          // 28: v1.Join.Request
	(*Join_Response)(nil),         // 29: v1.Join.Response
	(*Realtime_Request)(nil),      // 30: v1.Realtime.Request
	(*Realtime_Response)(nil),     // 31: v1.Realtime.Response
	(*Aggregate_Request)(nil),     // 32: v1.Aggregate.Request
	(*Aggregate_Response)(nil),    // 33: v1.Aggregate.Response
	nil,                           // 34: v1.Aggregate.Response.ResultsEntry
	(*Timeseries_Request)(nil),    // 35: v1.Timeseries.Request
	(*Timeseries_Response)(nil),   // 36: v1.Timeseries.Response
	(*Timeseries_Bucket)(nil),     // 37: v1.Timeseries.Bucket
	nil,                           // 38: v1.Timeseries.Bucket.ValuesEntry
	(*BreakDown_Request)(nil),     // 39: v1.BreakDown.Request
	(*BreakDown_Response)(nil),    // 40: v1.BreakDown.Response
	(*BreakDown_Result)(nil),      // 41: v1.BreakDown.Result
	(*BreakDown_KeyValues)(nil),   // 42: v1.BreakDown.KeyValues
	nil,                           // 43: v1.BreakDown.KeyValues.ValueEntry
	(*TimePeriod_Custom)(nil),     // 44: v1.TimePeriod.Custom
	(*timestamppb.Timestamp)(nil), // 45: google.protobuf.Timestamp
	(*Data)(nil),                  // 46: v1.Data
	(*emptypb.Empty)(nil),         // 47: google.protobuf.Empty
}
var file_vince_v1_vince_proto_depIdxs = []int32{
	3,  // 0: v1.TimePeriod.base:type_name -> v1.TimePeriod.Base
	44, // 1: v1.TimePeriod.custom:type_name -> v1.TimePeriod.Custom
	20, // 2: v1.Filters.list:type_name -> v1.Filter
	4,  // 3: v1.Filters.projection:type_name -> v1.Filters.Projection
	2,  // 4: v1.Filter.property:type_name -> v1.Property
	5,  // 5: v1.Filter.op:type_name -> v1.Filter.OP
	45, // 6: v1.Event.timestamp:type_name -> google.protobuf.Timestamp
	18, // 7: v1.Aggregate.Request.period:type_name -> v1.TimePeriod
	1,  // 8: v1.Aggregate.Request.metrics:type_name -> v1.Metric
	20, // 9: v1.Aggregate.Request.filters:type_name -> v1.Filter
	45, // 10: v1.Aggregate.Request.date:type_name -> google.protobuf.Timestamp
	34, // 11: v1.Aggregate.Response.results:type_name -> v1.Aggregate.Response.ResultsEntry
	18, // 12: v1.Timeseries.Request.period:type_name -> v1.TimePeriod
	1,  // 13: v1.Timeseries.Request.metrics:type_name -> v1.Metric
	0,  // 14: v1.Timeseries.Request.interval:type_name -> v1.Interval
	20, // 15: v1.Timeseries.Request.filters:type_name -> v1.Filter
	45, // 16: v1.Timeseries.Request.date:type_name -> google.protobuf.Timestamp
	37, // 17: v1.Timeseries.Response.results:type_name -> v1.Timeseries.Bucket
	45, // 18: v1.Timeseries.Bucket.timestamp:type_name -> google.protobuf.Timestamp
	38, // 19: v1.Timeseries.Bucket.values:type_name -> v1.Timeseries.Bucket.ValuesEntry
	2,  // 20: v1.BreakDown.Request.property:type_name -> v1.Property
	18, // 21: v1.BreakDown.Request.period:type_name -> v1.TimePeriod
	1,  // 22: v1.BreakDown.Request.metrics:type_name -> v1.Metric
	20, // 23: v1.BreakDown.Request.filters:type_name -> v1.Filter
	45, // 24: v1.BreakDown.Request.date:type_name -> google.protobuf.Timestamp
	41, // 25: v1.BreakDown.Response.results:type_name -> v1.BreakDown.Result
	2,  // 26: v1.BreakDown.Result.property:type_name -> v1.Property
	42, // 27: v1.BreakDown.Result.values:type_name -> v1.BreakDown.KeyValues
	43, // 28: v1.BreakDown.KeyValues.value:type_name -> v1.BreakDown.KeyValues.ValueEntry
	45, // 29: v1.TimePeriod.Custom.start:type_name -> google.protobuf.Timestamp
	45, // 30: v1.TimePeriod.Custom.end:type_name -> google.protobuf.Timestamp
	28, // 31: v1.InternalCLuster.Join:input_type -> v1.Join.Request
	25, // 32: v1.InternalCLuster.Load:input_type -> v1.Load.Request
	26, // 33: v1.InternalCLuster.Backup:input_type -> v1.Backup.Request
	24, // 34: v1.InternalCLuster.RemoveNode:input_type -> v1.RemoveNode.Request
	23, // 35: v1.InternalCLuster.Notify:input_type -> v1.Notify.Request
	9,  // 36: v1.InternalCLuster.NodeAPI:input_type -> v1.NodeAPIRequest
	46, // 37: v1.InternalCLuster.SendData:input_type -> v1.Data
	30, // 38: v1.InternalCLuster.Realtime:input_type -> v1.Realtime.Request
	32, // 39: v1.InternalCLuster.Aggregate:input_type -> v1.Aggregate.Request
	35, // 40: v1.InternalCLuster.Timeseries:input_type -> v1.Timeseries.Request
	39, // 41: v1.InternalCLuster.BreakDown:input_type -> v1.BreakDown.Request
	29, // 42: v1.InternalCLuster.Join:output_type -> v1.Join.Response
	47, // 43: v1.InternalCLuster.Load:output_type -> google.protobuf.Empty
	27, // 44: v1.InternalCLuster.Backup:output_type -> v1.Backup.Response
	47, // 45: v1.InternalCLuster.RemoveNode:output_type -> google.protobuf.Empty
	47, // 46: v1.InternalCLuster.Notify:output_type -> google.protobuf.Empty
	6,  // 47: v1.InternalCLuster.NodeAPI:output_type -> v1.NodeMeta
	47, // 48: v1.InternalCLuster.SendData:output_type -> google.protobuf.Empty
	31, // 49: v1.InternalCLuster.Realtime:output_type -> v1.Realtime.Response
	33, // 50: v1.InternalCLuster.Aggregate:output_type -> v1.Aggregate.Response
	36, // 51: v1.InternalCLuster.Timeseries:output_type -> v1.Timeseries.Response
	40, // 52: v1.InternalCLuster.BreakDown:output_type -> v1.BreakDown.Response
	42, // [42:53] is the sub-list for method output_type
	31, // [31:42] is the sub-list for method input_type
	31, // [31:31] is the sub-list for extension type_name
	31, // [31:31] is the sub-list for extension extendee
	0,  // [0:31] is the sub-list for field type_name
}

func init() { file_vince_v1_vince_proto_init() }
func file_vince_v1_vince_proto_init() {
	if File_vince_v1_vince_proto != nil {
		return
	}
	file_vince_v1_events_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_vince_v1_vince_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeMeta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vince_v1_vince_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Credentials); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vince_v1_vince_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Notify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vince_v1_vince_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeAPIRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vince_v1_vince_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveNode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vince_v1_vince_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Load); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vince_v1_vince_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Backup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vince_v1_vince_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Join); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vince_v1_vince_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Realtime); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vince_v1_vince_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Aggregate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vince_v1_vince_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Timeseries); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vince_v1_vince_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BreakDown); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vince_v1_vince_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TimePeriod); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vince_v1_vince_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Filters); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vince_v1_vince_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Filter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vince_v1_vince_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Event); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vince_v1_vince_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Error); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vince_v1_vince_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Notify_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vince_v1_vince_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveNode_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vince_v1_vince_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Load_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vince_v1_vince_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Backup_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vince_v1_vince_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Backup_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vince_v1_vince_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Join_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vince_v1_vince_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Join_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vince_v1_vince_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Realtime_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vince_v1_vince_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Realtime_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vince_v1_vince_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Aggregate_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vince_v1_vince_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Aggregate_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vince_v1_vince_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Timeseries_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vince_v1_vince_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Timeseries_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vince_v1_vince_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Timeseries_Bucket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vince_v1_vince_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BreakDown_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vince_v1_vince_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BreakDown_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vince_v1_vince_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BreakDown_Result); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vince_v1_vince_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BreakDown_KeyValues); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vince_v1_vince_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TimePeriod_Custom); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_vince_v1_vince_proto_msgTypes[12].OneofWrappers = []interface{}{
		(*TimePeriod_Base_)(nil),
		(*TimePeriod_Custom_)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_vince_v1_vince_proto_rawDesc,
			NumEnums:      6,
			NumMessages:   39,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_vince_v1_vince_proto_goTypes,
		DependencyIndexes: file_vince_v1_vince_proto_depIdxs,
		EnumInfos:         file_vince_v1_vince_proto_enumTypes,
		MessageInfos:      file_vince_v1_vince_proto_msgTypes,
	}.Build()
	File_vince_v1_vince_proto = out.File
	file_vince_v1_vince_proto_rawDesc = nil
	file_vince_v1_vince_proto_goTypes = nil
	file_vince_v1_vince_proto_depIdxs = nil
}
